h3. json-rpc server running on vert.x

vert.xで動くJSON-RPCサーバ


---


h4. とりあえず動かしてみる

* @jsonrpc_server@ の環境変数を変更する。

<pre>
# javaのインストール先
JAVA_HOME=/opt/jdk1.7.0_17

# scalaのインストール先
SCALA_HOME=/opt/scala-2.10.1

# vert.xのインストール先
VERTX_HOME=/opt/vert.x-1.3.1.final

# 読み込む設定ファイル
CONFIG=./config.json

# target/scala-2.10/classesの「2.10」の部分を使用するscalaのバージョンにあわせて変更
# build.sbtの「scalaVersion」も同じにする
CLASSPATH=$SCALA_HOME/lib/scala-library.jar:target/scala-2.10/classes
</pre>


* @config.json@ の内容を確認し、必要に応じて変更する。

<pre>
{
  "port": 9000,         // サーバのポート番号
  "charset": "utf-8",   // リクエストの文字コード
  "workers": [          // 起動するワーカーVerticleの設定リスト
    {
      "class_name": "jsonrpc.sample.AddService",  // クラス名
      "config": {                                 // 設定
        "name": "add"                             // 対応する「method」名
      },
      "instances": 1                              // インスタンスの数
    }
  ]
}
</pre>


* 起動

<pre>
$ ./jsonrpc_server start
</pre>

@tmp/jsonrpc_server.pid@ にプロセスIDが、
@tmp/jsonrpc_server.log@ にログが出る。


* 足し算してみる

<pre>
$ curl -v -X POST http://localhost:9000/ \
    -d '{"jsonrpc":"2.0", "method":"add", "params":{"num1":1, "num2":9}, "id":1}'
</pre>

のようにjsonをpostしたら

<pre>
{"jsonrpc":"2.0","result":{"answer":10},"id":1}
</pre>

のような応答が返ってくるはず。


---


WIP...

